/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Attendence;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import student_management.DbConnect;

public class AttendenceTrack extends javax.swing.JFrame {
        int pr=0,ab=0;
        String date1,date2,defaultDate;

    public AttendenceTrack() {
        initComponents();
        
        Date today = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
         String fd = sdf.format(today);
        defaultDate=fd;
//        System.out.print(defaultDate);
        int sno =1;
         try{
            Connection con = DbConnect.connect();
            PreparedStatement ps = con.prepareStatement(
                    "select s1.rollno, s1.name, a1.pa  from studdata s1 " +
                            "join attendence a1 on s1.rollno = a1.rollno ");
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                String rollno = rs.getString("rollno");
                String name = rs.getString("name");
                String present = rs.getString("pa");
                String absent ="";
                if(present.equalsIgnoreCase("-")){
                    ab++;  absent = "-"; 
                }
                if(present.equalsIgnoreCase("absent")){
                    ab++; 
                    absent = "absent";
                }
                else{ 
                    pr++;  
                }
                String sno1 = String.valueOf(sno);
                String tbData[] ={sno1,rollno,name,present,absent};
                DefaultTableModel tb1Model=(DefaultTableModel)jTable1.getModel();
                tb1Model.addRow(tbData);
                sno++;
            }
//            for those who have two label
            p.setText(String.valueOf(pr));
            a.setText(String.valueOf(ab));
//          for those who only have one label
//                p.setText("Present "+String.valueOf(pr));
//                a.setText("Absent "+String.valueOf(ab));
           pr=ab=0;
         }catch(Exception e){
             System.out.println(e);
         }
    }
    
    public void clearTable(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
        model.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        p = new javax.swing.JLabel();
        a = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        t1 = new javax.swing.JTextField();
        gobtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        clodebtn = new javax.swing.JButton();
        d1 = new com.toedter.calendar.JDateChooser();
        d2 = new com.toedter.calendar.JDateChooser();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 255), 4, true));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Attendence Track");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 255));
        jLabel2.setText("From  :");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 255));
        jLabel3.setText("To  :");

        search.setBackground(new java.awt.Color(153, 0, 204));
        search.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        search.setForeground(new java.awt.Color(255, 255, 255));
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        p.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        p.setForeground(new java.awt.Color(51, 255, 51));
        p.setText("Present    ----------");

        a.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        a.setForeground(new java.awt.Color(255, 0, 51));
        a.setText("Absent     ----------");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 51, 255));
        jLabel6.setText("Search  :");

        t1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 255, 153), 2));

        gobtn.setBackground(new java.awt.Color(153, 0, 204));
        gobtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        gobtn.setForeground(new java.awt.Color(255, 255, 255));
        gobtn.setText("Go");
        gobtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gobtnActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Sno", "Roll Number", "Name", "Present", "Absent"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        clodebtn.setBackground(new java.awt.Color(153, 0, 204));
        clodebtn.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        clodebtn.setForeground(new java.awt.Color(255, 255, 255));
        clodebtn.setText("Back");
        clodebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clodebtnActionPerformed(evt);
            }
        });

        d1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 2));

        d2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 255, 0), 2));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(p, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                            .addComponent(a, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gobtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(d2, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 696, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(56, 56, 56))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 953, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clodebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(391, 391, 391))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(d1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(d2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(p, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(a, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(gobtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clodebtn, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clodebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clodebtnActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_clodebtnActionPerformed

    private void gobtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gobtnActionPerformed
        // TODO add your handling code here:
        clearTable(jTable1);
        int sno =1;
        try{
            Connection con = DbConnect.connect();
            PreparedStatement ps = con.prepareStatement(
                    "select s1.rollno, s1.name, a1.pa  from studddata s1 " +
                            "join attendence a1 on s1.rollno = a1.rollno where a1.rollno=? "
            );
            ps.setString(1,t1.getText());
            ResultSet rs = ps.executeQuery();
                            
             int count =0;
            while(rs.next()){
                count++;
//                System.out.println(rs.getString("rollno"));
                String rollno = rs.getString("rollno");
                String name = rs.getString("name");
                String present = rs.getString("pa");
                String absent ="";
                if(!present.equalsIgnoreCase("present")){
                    ab++;
                    absent = "absent";
                }
                else{
                    pr++;
                }
//                System.out.println(count);
                String sno1 = String.valueOf(sno);
                String tbData[] ={sno1,rollno,name,present,absent};
                DefaultTableModel tb1Model=(DefaultTableModel)jTable1.getModel();
                tb1Model.addRow(tbData);
                sno++;
            }
            

           if(count==0){
               JOptionPane.showMessageDialog(null,"No such roll number found");
           }  
            p.setText(String.valueOf(pr));
            a.setText(String.valueOf(ab));
            pr=ab=0;
        }catch(Exception e){}
    }//GEN-LAST:event_gobtnActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        try{
           clearTable(jTable1);
           SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            date1 = (d1.getDate() != null) ? sdf.format(d1.getDate()) : defaultDate;
            date2 = (d2.getDate() != null) ? sdf.format(d2.getDate()) : defaultDate;
              int sno =1;
              Connection con = DbConnect.connect();
              PreparedStatement ps = con.prepareStatement(
                    "select  *  from studdata s1 " +
                            "join attendence a1 on s1.rollno = a1.rollno where a1.date between ? and ?");
            ps.setString(1,date1);
            ps.setString(2,date2);
            ResultSet rs = ps.executeQuery();
             int count =0;
            while(rs.next()){
                count++;
//                System.out.println(rs.getString("rollno"));
                String rollno = rs.getString("rollno");
                String name = rs.getString("name");
                String present = rs.getString("pa");
                String absent ="";
                if(present.equalsIgnoreCase("-")){
                    ab++;
                    absent = "-";
                }
                if(present.equalsIgnoreCase("absent")){
                    ab++;
                    absent = "absent";
                }
                else{
                    pr++;
                }
//                System.out.println(count);
                String sno1 = String.valueOf(sno);
                String tbData[] ={sno1,rollno,name,present,absent};
                DefaultTableModel tb1Model=(DefaultTableModel)jTable1.getModel();
                tb1Model.addRow(tbData);
                sno++;
            }
            p.setText(String.valueOf(pr));
            a.setText(String.valueOf(ab));
            pr=ab=0;

       }catch(Exception e){
           System.out.print(e);
                   
       }
//        
//        clearTable(jTable1);
//        int sno =1;
//        try{
//            Connection con = DbConnect.connect();
//            PreparedStatement ps = con.prepareStatement(
//                    "select s1.rollno, s1.name, a1.pa  from studddata s1 " +
//                            "join attendence a1 on s1.rollno = a1.rollno where a1.rollno=? "
//            );
//            ps.setString(1,t1.getText());
//            ResultSet rs = ps.executeQuery();
//                            
//             int count =0;
//            while(rs.next()){
//                count++;
////                System.out.println(rs.getString("rollno"));
//                String rollno = rs.getString("rollno");
//                String name = rs.getString("name");
//                String present = rs.getString("pa");
//                String absent ="";
//                if(!present.equalsIgnoreCase("present")){
//                    ab++;
//                    absent = "absent";
//                }
//                else{
//                    pr++;
//                }
////                System.out.println(count);
//                String sno1 = String.valueOf(sno);
//                String tbData[] ={sno1,rollno,name,present,absent};
//                DefaultTableModel tb1Model=(DefaultTableModel)jTable1.getModel();
//                tb1Model.addRow(tbData);
//                sno++;
//            }
//            
//
//           if(count==0){
//               JOptionPane.showMessageDialog(null,"No such roll number found");
//           }  
//            p.setText(String.valueOf(pr));
//            a.setText(String.valueOf(ab));
//            pr=ab=0;
//        }catch(Exception e){}

    }//GEN-LAST:event_searchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AttendenceTrack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AttendenceTrack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AttendenceTrack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AttendenceTrack.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AttendenceTrack().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel a;
    private javax.swing.JButton clodebtn;
    private com.toedter.calendar.JDateChooser d1;
    private com.toedter.calendar.JDateChooser d2;
    private javax.swing.JButton gobtn;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel p;
    private javax.swing.JButton search;
    private javax.swing.JTextField t1;
    // End of variables declaration//GEN-END:variables
}
